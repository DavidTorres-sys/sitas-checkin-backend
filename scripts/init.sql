CREATE TABLE IdentificationType (
                                    identification_type_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                        START WITH 1 INCREMENT BY 1
                                        ) PRIMARY KEY,
                                    identification_type VARCHAR2 (20) NOT NULL,
                                    CONSTRAINT unique_identification_type UNIQUE (identification_type)
);

CREATE TABLE Person (
                        person_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                            START WITH 1 INCREMENT BY 1
                            ) PRIMARY KEY,
                        id_identification_type NUMBER NOT NULL REFERENCES IdentificationType (identification_type_id) ON DELETE CASCADE,
                        identification_number VARCHAR2 (20) NOT NULL,
                        first_name VARCHAR2 (200) NOT NULL,
                        last_name VARCHAR2 (200) NOT NULL,
                        genre CHAR(1) NOT NULL,
                        birth_date DATE NOT NULL,
                        phone_number VARCHAR2 (20),
                        country VARCHAR2 (50) NOT NULL,
                        province VARCHAR2 (50) NOT NULL,
                        city VARCHAR2 (50) NOT NULL,
                        residence VARCHAR2 (200) NOT NULL,
                        mail VARCHAR2 (200) NOT NULL,
                        access_key VARCHAR2 (200) NOT NULL, -- Password
                        CONSTRAINT unique_person UNIQUE (id_identification_type, identification_number),
                        CONSTRAINT unique_mail UNIQUE (mail),
                        CONSTRAINT check_identification_number CHECK (REGEXP_LIKE(identification_number, '^\d+$')),
                        CONSTRAINT check_phone_number CHECK (REGEXP_LIKE(phone_number, '^\d+$')),
                        CONSTRAINT check_genre CHECK (genre IN ('M', 'F')),
                        CONSTRAINT check_mail_injection_prevention CHECK (NOT REGEXP_LIKE(mail, '[#=''"$;%]')),
                        CONSTRAINT check_mail_format CHECK (REGEXP_LIKE(mail, '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$')),
                        CONSTRAINT check_acces_key_injection_prevention CHECK (NOT REGEXP_LIKE(access_key, '[#=''"$;%]')),
                        CONSTRAINT check_access_key_complexity CHECK (
                            LENGTH(access_key) >= 8 AND
                            REGEXP_LIKE(access_key, '[A-Z]') AND
                            REGEXP_LIKE(access_key, '[a-z]') AND
                            REGEXP_LIKE(access_key, '[0-9]') AND
                            REGEXP_LIKE(access_key, '[[:punct:]]')
                            )
);

CREATE TABLE Position(
                         position_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                             START WITH 1 INCREMENT BY 1
                             ) PRIMARY KEY,
                         position_name VARCHAR2 (50) NOT NULL,
                         detail VARCHAR2 (500),
                         CONSTRAINT unique_position_name UNIQUE (position_name)
);

CREATE TABLE Privilege (
                           privilege_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                               START WITH 1 INCREMENT BY 1
                               ) PRIMARY KEY,
                           privilege_name VARCHAR2 (50) NOT NULL,
                           detail VARCHAR2 (500),
                           CONSTRAINT unique_privilege_name UNIQUE (privilege_name)
);

CREATE TABLE PersonPosition (
                                person_position_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                    START WITH 1 INCREMENT BY 1
                                    ) PRIMARY KEY,
                                person_id NUMBER NOT NULL REFERENCES Person (person_id) ON DELETE CASCADE,
                                position_id NUMBER NOT NULL REFERENCES Position (position_id) ON DELETE CASCADE
);

CREATE TABLE PositionPrivilege (
                                   position_privilege_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                       START WITH 1 INCREMENT BY 1
                                       ) PRIMARY KEY,
                                   position_id NUMBER NOT NULL REFERENCES Position (position_id) ON DELETE CASCADE,
                                   privilege_id NUMBER NOT NULL REFERENCES Privilege (privilege_id) ON DELETE CASCADE
);

CREATE TABLE Flight (
                        flight_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                            START WITH 1 INCREMENT BY 1
                            ) PRIMARY KEY,
                        flight_number VARCHAR2 (6) NOT NULL,
                        base_price NUMBER (10, 2) NOT NULL,
                        tax_percent NUMBER (5, 2) NOT NULL,
                        surcharge NUMBER (10, 2) NOT NULL,
                        status VARCHAR2 (20) DEFAULT 'Scheduled' NOT NULL
);

CREATE TABLE AirplaneModel (
                               airplane_model VARCHAR2 (15) PRIMARY KEY,
                               family VARCHAR2 (15) NOT NULL,
                               capacity NUMBER (3) NOT NULL,
                               cargo_capacity NUMBER (10, 2) NOT NULL,
                               volume_capacity NUMBER (10, 2) NOT NULL
);

CREATE TABLE Airport (
                         airport_code VARCHAR2 (3) PRIMARY KEY,
                         name VARCHAR2 (80) NOT NULL,
                         type VARCHAR2 (20) NOT NULL,
                         city VARCHAR2 (80) NOT NULL,
                         country VARCHAR2 (30) NOT NULL,
                         runways NUMBER (2) NOT NULL
);

CREATE TABLE Scale (
                       scale_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                           START WITH 1 INCREMENT BY 1
                           ) PRIMARY KEY,
                       flight_id NUMBER REFERENCES Flight (flight_id) ON DELETE CASCADE,
                       airplane_model VARCHAR2 (15) REFERENCES AirplaneModel (airplane_model),
                       origin_airport VARCHAR2 (3) NOT NULL REFERENCES Airport (airport_code),
                       destination_airport VARCHAR2 (3) NOT NULL REFERENCES Airport (airport_code),
                       departure_date TIMESTAMP NOT NULL,
                       arrival_date TIMESTAMP NOT NULL
);

CREATE TABLE Employee (
                          employee_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                              START WITH 1 INCREMENT BY 1
                              ) PRIMARY KEY,
                          name VARCHAR2 (80) NOT NULL,
                          job_title VARCHAR2 (30) NOT NULL
);

CREATE TABLE FlightCrew (
                            flight_crew_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                START WITH 1 INCREMENT BY 1
                                ) PRIMARY KEY,
                            flight_id NUMBER REFERENCES Flight (flight_id) ON DELETE CASCADE,
                            employee_id NUMBER REFERENCES Employee (employee_id),
                            flight_role VARCHAR2 (20) NOT NULL
);

CREATE TABLE Booking (
                         booking_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                             START WITH 1 INCREMENT BY 1
                             ) PRIMARY KEY,
                         flight_id NUMBER REFERENCES Flight NOT NULL,
                         booking_date TIMESTAMP NOT NULL,
                         booking_status VARCHAR2 (20) NOT NULL,
                         total_price NUMBER (10, 2) NOT NULL
);

CREATE TABLE Passenger (
                           passenger_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                               START WITH 1 INCREMENT BY 1
                               ) PRIMARY KEY,
                           person_id NUMBER REFERENCES Person (person_id) NOT NULL,
                           booking_id NUMBER REFERENCES Booking (booking_id) NOT NULL
);

CREATE TABLE PlacementArea (
                               placement_area_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                   START WITH 1 INCREMENT BY 1
                                   ) PRIMARY KEY,
                               name VARCHAR2 (100) NOT NULL
);

CREATE TABLE Luggage (
                         luggage_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                             START WITH 1 INCREMENT BY 1
                             ) PRIMARY KEY,
                         luggage_type VARCHAR2 (100) NOT NULL,
                         extra_charge FLOAT DEFAULT 0,
                         quantity NUMBER (4) DEFAULT 1,
                         description VARCHAR2 (150),
                         width FLOAT NOT NULL,
                         height FLOAT NOT NULL,
                         weight FLOAT NOT NULL,
                         passenger_id NUMBER REFERENCES Passenger NOT NULL,
                         flight_id NUMBER REFERENCES Flight NOT NULL,
                         booking_id NUMBER REFERENCES Booking NOT NULL,
                         placement_area_id NUMBER REFERENCES PlacementArea NOT NULL
);

CREATE TABLE Luggage_Info (
                              luggage_info_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                  START WITH 1 INCREMENT BY 1
                                  ) PRIMARY KEY,
                              shipping_address VARCHAR2 (150) NOT NULL,
                              luggage_id NUMBER REFERENCES Luggage
);

CREATE TABLE Medical_Info (
                              medical_info_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                  START WITH 1 INCREMENT BY 1
                                  ) PRIMARY KEY,
                              person_id NUMBER REFERENCES Person (person_id) NOT NULL,
                              medical_conditions VARCHAR2 (150),
                              emergency_contact_name VARCHAR2 (150),
                              emergency_contact_phone VARCHAR2 (150)
);

CREATE TABLE Boarding_Pass (
                               boarding_pass_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                   START WITH 1 INCREMENT BY 1
                                   ) PRIMARY KEY,
                               passenger_id NUMBER REFERENCES Passenger NOT NULL,
                               booking_id NUMBER REFERENCES Booking NOT NULL,
                               flight_id NUMBER REFERENCES Flight NOT NULL,
                               medical_info_id NUMBER REFERENCES Medical_Info NOT NULL,
                               luggage_info_id NUMBER REFERENCES Luggage_Info NOT NULL,
                               boarding_time TIMESTAMP NOT NULL
);

CREATE TABLE PaymentMethod (
                               payment_method_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                   START WITH 1 INCREMENT BY 1
                                   ) PRIMARY KEY,
                               payment_method_type VARCHAR2 (20) NOT NULL
);

CREATE TABLE PaymentMethodXUser (
                                    payment_methodXuser_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                        START WITH 1 INCREMENT BY 1
                                        ) PRIMARY KEY,
                                    payment_method_id NUMBER REFERENCES PaymentMethod (payment_method_id),
                                    user_id NUMBER REFERENCES Person (person_id) NOT NULL
);

CREATE TABLE Search_History (
                                search_history_id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                    START WITH 1 INCREMENT BY 1
                                    ) PRIMARY KEY,
                                person_id NUMBER REFERENCES Person (person_id) NOT NULL,
                                scale_id NUMBER REFERENCES Scale NOT NULL,
                                search_date DATE NOT NULL
);

CREATE TABLE SeatClass (
                           id_class NUMBER GENERATED BY DEFAULT AS IDENTITY (
                               START WITH 1 INCREMENT BY 1
                               ) PRIMARY KEY,
                           class_type VARCHAR2 (20) NOT NULL
);

CREATE TABLE SeatStatus (
                            id_status NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                START WITH 1 INCREMENT BY 1
                                ) PRIMARY KEY,
                            status_type VARCHAR2 (20) NOT NULL
);

CREATE TABLE SeatLocation (
                              id_location NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                  START WITH 1 INCREMENT BY 1
                                  ) PRIMARY KEY,
                              location_type VARCHAR2 (20) NOT NULL
);

CREATE TABLE Seat (
                      id_seat NUMBER GENERATED BY DEFAULT AS IDENTITY (
                          START WITH 1 INCREMENT BY 1
                          ) PRIMARY KEY,
                      id_class NUMBER REFERENCES SeatClass (id_class) ON DELETE CASCADE,
                      id_status NUMBER REFERENCES SeatStatus (id_status) ON DELETE CASCADE,
                      id_location NUMBER REFERENCES SeatLocation (id_location) ON DELETE CASCADE,
                      flight_id NUMBER REFERENCES Flight (flight_id),
                      label VARCHAR(5) NOT NULL
);

CREATE TABLE SeatPassenger (
                               id NUMBER GENERATED BY DEFAULT AS IDENTITY (
                                   START WITH 1 INCREMENT BY 1
                                   ) PRIMARY KEY,
                               id_seat NUMBER REFERENCES Seat (id_seat) ON DELETE CASCADE,
                               booking_id NUMBER REFERENCES Passenger (passenger_id) ON DELETE CASCADE
);

-- Insertar datos iniciales
-- Inserts para IdentificationType
INSERT INTO IdentificationType (identification_type) VALUES ('Passport');
INSERT INTO IdentificationType (identification_type) VALUES ('Driver License');

-- Inserts para Person
INSERT INTO Person (id_identification_type, identification_number, first_name, last_name, genre, birth_date, phone_number, country, province, city, residence, mail, access_key)
VALUES (1, '123456789', 'John', 'Doe', 'M', TO_DATE('1980-01-01', 'YYYY-MM-DD'), '1234567890', 'USA', 'California', 'Los Angeles', '123 Main St', 'john.doe@example.com', 'P@ssw0rd!');
INSERT INTO Person (id_identification_type, identification_number, first_name, last_name, genre, birth_date, phone_number, country, province, city, residence, mail, access_key)
VALUES (2, '987654321', 'Jane', 'Smith', 'F', TO_DATE('1990-02-02', 'YYYY-MM-DD'), '0987654321', 'USA', 'New York', 'New York', '456 Elm St', 'jane.smith@example.com', 'S3cur3P@ss!');

-- Inserts para Position
INSERT INTO Position (position_name, detail) VALUES ('Pilot', 'Responsible for flying the airplane');
INSERT INTO Position (position_name, detail) VALUES ('Co-Pilot', 'Assists the pilot');

-- Inserts para Privilege
INSERT INTO Privilege (privilege_name, detail) VALUES ('Admin Access', 'Full access to all systems');
INSERT INTO Privilege (privilege_name, detail) VALUES ('Read Only', 'Read-only access to systems');

-- Inserts para PersonPosition
INSERT INTO PersonPosition (person_id, position_id) VALUES (1, 1);
INSERT INTO PersonPosition (person_id, position_id) VALUES (2, 2);

-- Inserts para PositionPrivilege
INSERT INTO PositionPrivilege (position_id, privilege_id) VALUES (1, 1);
INSERT INTO PositionPrivilege (position_id, privilege_id) VALUES (2, 2);

-- Inserts para Flight
INSERT INTO Flight (flight_number, base_price, tax_percent, surcharge, status) VALUES ('AA123', 200.00, 10.00, 20.00, 'Scheduled');
INSERT INTO Flight (flight_number, base_price, tax_percent, surcharge, status) VALUES ('BA456', 300.00, 15.00, 25.00, 'Scheduled');

-- Inserts para AirplaneModel
INSERT INTO AirplaneModel (airplane_model, family, capacity, cargo_capacity, volume_capacity) VALUES ('B737', 'Boeing', 180, 2000.00, 100.00);
INSERT INTO AirplaneModel (airplane_model, family, capacity, cargo_capacity, volume_capacity) VALUES ('A320', 'Airbus', 160, 1800.00, 90.00);

-- Inserts para Airport
INSERT INTO Airport (airport_code, name, type, city, country, runways) VALUES ('LAX', 'Los Angeles International Airport', 'International', 'Los Angeles', 'USA', 4);
INSERT INTO Airport (airport_code, name, type, city, country, runways) VALUES ('JFK', 'John F. Kennedy International Airport', 'International', 'New York', 'USA', 4);

-- Inserts para Scale
INSERT INTO Scale (flight_id, airplane_model, origin_airport, destination_airport, departure_date, arrival_date) VALUES (1, 'B737', 'LAX', 'JFK', TO_TIMESTAMP('2024-06-01 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2024-06-01 16:00:00', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO Scale (flight_id, airplane_model, origin_airport, destination_airport, departure_date, arrival_date) VALUES (2, 'A320', 'JFK', 'LAX', TO_TIMESTAMP('2024-06-02 08:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2024-06-02 16:00:00', 'YYYY-MM-DD HH24:MI:SS'));

-- Inserts para Employee
INSERT INTO Employee (name, job_title) VALUES ('Alice Johnson', 'Flight Attendant');
INSERT INTO Employee (name, job_title) VALUES ('Bob Brown', 'Ground Crew');

-- Inserts para FlightCrew
INSERT INTO FlightCrew (flight_id, employee_id, flight_role) VALUES (1, 1, 'Flight Attendant');
INSERT INTO FlightCrew (flight_id, employee_id, flight_role) VALUES (2, 2, 'Ground Crew');

-- Inserts para Booking
INSERT INTO Booking (flight_id, booking_date, booking_status, total_price) VALUES (1, TO_TIMESTAMP('2024-05-01 10:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Confirmed', 230.00);
INSERT INTO Booking (flight_id, booking_date, booking_status, total_price) VALUES (2, TO_TIMESTAMP('2024-05-02 11:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'Pending', 345.00);

-- Inserts para Passenger
INSERT INTO Passenger (person_id, booking_id) VALUES (1, 1);
INSERT INTO Passenger (person_id, booking_id) VALUES (2, 2);

-- Inserts para PlacementArea
INSERT INTO PlacementArea (NAME) VALUES ('Cargo Hold');
INSERT INTO PlacementArea (NAME) VALUES ('Overhead Compartment');

-- Inserts para Luggage
INSERT INTO Luggage (LUGGAGE_TYPE, EXTRA_CHARGE, QUANTITY, DESCRIPTION, WIDTH, HEIGHT, WEIGHT, PASSENGER_ID, FLIGHT_ID, BOOKING_ID, placement_area_ID)
VALUES ('Suitcase', 30.00, 1, 'Large suitcase', 70.0, 50.0, 23.0, 1, 1, 1, 1);
INSERT INTO Luggage (LUGGAGE_TYPE, EXTRA_CHARGE, QUANTITY, DESCRIPTION, WIDTH, HEIGHT, WEIGHT, PASSENGER_ID, FLIGHT_ID, BOOKING_ID, placement_area_ID)
VALUES ('Backpack', 0.00, 1, 'Carry-on backpack', 30.0, 20.0, 5.0, 2, 2, 2, 2);

-- Inserts para LUGGAGE_INFO
INSERT INTO LUGGAGE_INFO (SHIPPING_ADDRESS, Luggage_id) VALUES ('123 Main St, Los Angeles, CA', 1);
INSERT INTO LUGGAGE_INFO (SHIPPING_ADDRESS, Luggage_id) VALUES ('456 Elm St, New York, NY', 2);

-- Inserts para MEDICAL_INFO
INSERT INTO MEDICAL_INFO (PERSON_ID, MEDICAL_CONDITIONS, EMERGENCY_CONTACT_NAME, EMERGENCY_CONTACT_PHONE)
VALUES (1, 'None', 'Jane Doe', '1234567890');
INSERT INTO MEDICAL_INFO (PERSON_ID, MEDICAL_CONDITIONS, EMERGENCY_CONTACT_NAME, EMERGENCY_CONTACT_PHONE)
VALUES (2, 'Asthma', 'John Smith', '0987654321');

-- Inserts para BOARDING_PASS
INSERT INTO BOARDING_PASS (passenger_id, booking_id, Flight_ID, MEDICAL_INFO_ID, LUGGAGE_INFO_ID, BOARDING_TIME)
VALUES (1, 1, 1, 1, 1, TO_TIMESTAMP('2024-06-01 07:00:00', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO BOARDING_PASS (passenger_id, booking_id, Flight_ID, MEDICAL_INFO_ID, LUGGAGE_INFO_ID, BOARDING_TIME)
VALUES (2, 2, 2, 2, 2, TO_TIMESTAMP('2024-06-02 07:00:00', 'YYYY-MM-DD HH24:MI:SS'));

-- Inserts para PaymentMethod
INSERT INTO PaymentMethod (payment_method_type) VALUES ('Credit Card');
INSERT INTO PaymentMethod (payment_method_type) VALUES ('PayPal');

-- Inserts para PaymentMethodXUser
INSERT INTO PaymentMethodXUser (payment_method_id, user_id) VALUES (1, 1);
INSERT INTO PaymentMethodXUser (payment_method_id, user_id) VALUES (2, 2);

-- Inserts para Search_History
INSERT INTO Search_History (Person_ID, Scale_ID, search_date) VALUES (1, 1, TO_DATE('2024-05-01', 'YYYY-MM-DD'));
INSERT INTO Search_History (Person_ID, Scale_ID, search_date) VALUES (2, 2, TO_DATE('2024-05-02', 'YYYY-MM-DD'));

-- Inserts para SeatClass
INSERT INTO SeatClass (class_type) VALUES ('Economy');
INSERT INTO SeatClass (class_type) VALUES ('Business');

-- Inserts para SeatStatus
INSERT INTO SeatStatus (status_type) VALUES ('Available');
INSERT INTO SeatStatus (status_type) VALUES ('Booked');

-- Inserts para SeatLocation
INSERT INTO SeatLocation (location_type) VALUES ('Aisle');
INSERT INTO SeatLocation (location_type) VALUES ('Window');

-- Inserts para Seat
INSERT INTO Seat (id_class, id_status, id_location, flight_id, label) VALUES (1, 1, 1, 1, '1A');
INSERT INTO Seat (id_class, id_status, id_location, flight_id, label) VALUES (2, 2, 2, 2, '2B');

-- Inserts para SeatPassenger
INSERT INTO SeatPassenger (id_seat, booking_id) VALUES (1, 1);
INSERT INTO SeatPassenger (id_seat, booking_id) VALUES (2, 2);

COMMIT;